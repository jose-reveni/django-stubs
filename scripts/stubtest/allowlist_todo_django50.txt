# Autogenerated by `stubtest`
# Only discrepancies that appeared after Django 4.2 -> 5.0 update.
# Unsorted: there are real problems and things we can really ignore.

django.contrib.gis.db.models.Field._get_flatchoices
django.contrib.gis.db.models.ForeignKey.cast_db_type
django.contrib.gis.db.models.Q.identity
django.contrib.gis.geos.prototypes.io.DEFAULT_TRIM_VALUE
django.contrib.gis.management
django.contrib.gis.management.commands
django.contrib.gis.management.commands.inspectdb
django.contrib.gis.management.commands.ogrinspect
django.db.backends.mysql.features.DatabaseFeatures.allows_group_by_selected_pks
django.db.backends.mysql.features.DatabaseFeatures.has_native_uuid_field
django.db.backends.mysql.features.DatabaseFeatures.supports_expression_defaults
django.db.backends.oracle.features.DatabaseFeatures.supports_primitives_in_json_field
django.db.backends.oracle.features.DatabaseFeatures.test_collations
django.db.backends.oracle.oracledb_any
django.db.backends.postgresql.features.DatabaseFeatures.is_postgresql_15
django.db.backends.postgresql.features.DatabaseFeatures.supports_nulls_distinct_unique_constraints
django.db.backends.postgresql.psycopg_any
django.db.backends.sqlite3.schema.DatabaseSchemaEditor.sql_alter_column_comment
django.db.backends.sqlite3.schema.DatabaseSchemaEditor.sql_alter_table_comment
django.db.models.Field._get_flatchoices
django.db.models.ForeignKey.cast_db_type
django.db.models.Q.identity
django.db.models.fields.Field._get_flatchoices
django.db.models.fields.related.ForeignKey.cast_db_type
django.template.autoreload

# Django + Oracle (new errors after 5.0.5 update)
django.db.backends.oracle.utils.dsn
django.db.backends.oracle.utils.BulkInsertMapper.NCLOB
django.db.backends.oracle.introspection.TableInfo
django.db.backends.oracle.base.DatabaseWrapper.oracledb_version
django.db.backends.oracle.base.DatabaseWrapper.ops
django.contrib.gis.db.backends.oracle.operations.OracleOperations.from_text
django.contrib.gis.db.backends.oracle.operations.OracleOperations.convert_extent
